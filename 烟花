<!DOCTYPE html>
<html>
<head>
    <title>浪漫表白烟花</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background: #000;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        canvas {
            position: fixed;
            top: 0;
            left: 0;
        }
        .love-text {
            position: relative;
            color: #ff4081;
            font-family: 'Microsoft YaHei', sans-serif;
            font-size: 4em;
            text-align: center;
            text-shadow: 0 0 10px #ff4081;
            z-index: 1;
            animation: glow 2s ease-in-out infinite;
        }
        @keyframes glow {
            0%, 100% { opacity: 0.8; }
            50% { opacity: 1; }
        }
    </style>
</head>
<body>
    <div class="love-text">❤️ 我喜欢你很久了<br>可以做我女朋友吗？ ❤️</div>
    <canvas id="fireworks"></canvas>

    <script>
        const canvas = document.getElementById('fireworks');
        const ctx = canvas.getContext('2d');
        
        // 设置画布尺寸
        function resizeCanvas() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        }
        window.addEventListener('resize', resizeCanvas);
        resizeCanvas();

        // 烟花粒子类
        class Particle {
            constructor(x, y, color) {
                this.x = x;
                this.y = y;
                this.color = color;
                this.radius = Math.random() * 2 + 1;
                const angle = Math.random() * Math.PI * 2;
                const velocity = Math.random() * 5 + 2;
                this.dx = Math.cos(angle) * velocity;
                this.dy = Math.sin(angle) * velocity;
                this.alpha = 1;
                this.decay = Math.random() * 0.015 + 0.015;
            }

            update() {
                this.x += this.dx;
                this.y += this.dy;
                this.dy += 0.1; // 重力效果
                this.alpha -= this.decay;
                return this.alpha > 0;
            }

            draw() {
                ctx.save();
                ctx.globalAlpha = this.alpha;
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
                ctx.fillStyle = this.color;
                ctx.fill();
                ctx.restore();
            }
        }

        // 烟花管理
        const particles = [];
        
        function createFirework(x, y) {
            const hue = Math.random() * 360;
            const color = `hsl(${hue}, 100%, 50%)`;
            
            for (let i = 0; i < 100; i++) {
                particles.push(new Particle(x, y, color));
            }
        }

        // 动画循环
        function animate() {
            ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            for (let i = particles.length - 1; i >= 0; i--) {
                if (!particles[i].update()) {
                    particles.splice(i, 1);
                } else {
                    particles[i].draw();
                }
            }
            
            requestAnimationFrame(animate);
        }

        // 鼠标点击/触摸事件
        canvas.addEventListener('click', (e) => {
            createFirework(e.clientX, e.clientY);
        });
        
        canvas.addEventListener('touchstart', (e) => {
            e.preventDefault();
            const touch = e.touches[0];
            createFirework(touch.clientX, touch.clientY);
        });

        // 随机自动播放烟花
        setInterval(() => {
            if (Math.random() < 0.3) { // 30%概率自动播放
                createFirework(
                    Math.random() * canvas.width,
                    Math.random() * canvas.height
                );
            }
        }, 2000);

        animate();
    </script>
</body>
</html>
